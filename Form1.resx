<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="form1BindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEALygAAAEACADoDAAAFgAAACgAAAAvAAAAUAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAwOEAAKDhQADhASAAoQGAAIFBIAChAgAAoQJgAKEigADBAuAAwSNAAKFjAADBY4AAoYNAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAADQ0NDQ0NDQ0NDQ0NDQ0BAQEBAQENDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0ADQ0NDQ0N
        DQ0NDQ0AAQEBBwoKBwoHDQ0NDQ0NDQEDAQMDDQ0NDQ0NDQ0NDQ0NDQ0ADQ0NDQ0NDQ0NDQAHCgoKBwoK
        CgoKAwMNDQ0NAQMDAwMBAwMDDQ0NDQ0NDQ0NDQ0ADQ0NDQ0NDQ0NAAoKBwoKCgcKCgoKBwoHAwMDAwMD
        AwMDAwMBAw0NDQ0NDQ0NDQ0ADQ0NDQ0NDQ0AAQoKCgoKCgoKCgoKCgcKCgoKBQMDAwMDAwMDAwMDDQ0N
        DQ0NDQ0ADQ0NDQ0NAQEKCgoKCgoKCgoFBQoKBQUHBwoKCgUFBQUDAwMDAwMDAQEDDQ0NDQ0ADQ0NDQ0E
        CgoKCgoKBQUFBQgICAUFCAgFBQUFBQUGBgYGBQYFBgUBAwMDAw0NDQ0ADQ0NDQcKCgoKCgUFCAgICAgI
        CAgICAgICAgFBgYGBgYGBgUGBQcHAwMDAwMNDQ0ADQ0NDQcKCgoFBQgICAgICAgICAgICAgICAgGBgYG
        BgYGBgYGBgYGAwMDAwMNDQ0ADQ0NDQ0HAAAICAgICAsLCQgICAgICAgICAgGBgYGBgYGBgYGBgYGBwMD
        Aw0NDQ0ADQ0NDQ0ACAgICAgICwsLCwsJCwsLCQgICAYGBgYICAgIBgMDBgYFBgUAAQ0NDQ0ADQ0NAAAI
        CAgICQsLCQsLCwsLCwsLCwsIBgYGCAgICAgICAMGBgYGBgYGAA0NDQ0ADQ0ACAgICwsICwsLCwsLCwsL
        CwsLCwsBAgYICAgICAgICAgICAgGBgYGBgANDQ0ADQ0ACAgLCwsLCQsLCwsLAwMGCwsGAAAAAAADAwgI
        BgMDCAgICAgIBggGBgANDQ0ADQMICwsJCwsLCwsLCwsLBgMDAwMDAAAAAAAAAwMDAwMGAwgICAgGCAYI
        AwADDQ0ADQMLCwsLCwsICAsLCwsLCwMDAwMAAAAAAAAAAAMDAwMIAwgICAgIBggGAAMDAw0ADQ0DCwsL
        CwgICAgLCwsGAwMDAwAAAAAAAAABAAEDAwMFCAgICAgICAMDAwMDAw0ADQ0DAwkLCwkICQsLBgMDAwMD
        AQAAAAAAAAADAQADAwMDAwMICAYDAwMDAwMDAw0ADQMJCwkICwsLCwsLAwMDAwMDAAAAAAAAAAADAwMD
        AwMDAwMDAwMHBwcHAwMDDQ0ABQsLCwsLCwsLCwsLCwYDAwMBAAADAAAAAAABAQEBAwMDAwMDBwcHDAwK
        BwcDAw0ABQYLCwsLCAgJCwsLCwsDAwMAAQMDAAAAAAgICAgBAQMDAwMDAwoMDAwMDAoKBwMADQUFBQsL
        CQgICwsIAwMDAwMDAwEBAQsLCwkICAYIBgEDAwMDAwwMDAwMDAwKCgMADQ0NBQUFCwsLCAMDCgMDAwEB
        AQgLCwsLCwsJCAgICAEDAwMDBwwMDAwMDAoKCgMADQ0HCgoFBQUFBQoKCgoBAQELCwgLCwsLCwsJCAgI
        BgEDAwMKCgoMDAwKCgoDAQ0ADQcKCgoKCgoKCgoKAwMBBgsLCwsICwsLCwkICAgGAQMDBwoKCgoKCgoK
        CgoKAQ0ADQcHCgoHCgoKCgoDBgsLCwgLCwsLCwsLCwgICAgIAQMDAQEBCgoKCgoKCgoHAQ0ADQ0HBwcK
        CgoKCgoDCwsLCwsLCwsLCwsLCQsLCAgICAEBCAgIAQEKCgoKCgEBDQ0ADQ0NDQcKCgcKCgoKAwkLCwsL
        CwsLCwsLCwsLCwgIBggICAgIBggDCgoBAQ0NDQ0ADQ0NDQ0HBwcKCgoKCggICwsLCwsLCAgLCwsLCwgI
        CAgICAgGCAgDCgENDQ0NDQ0ADQ0NDQ0NDQ0HBwoKAwMLCwsLCwsICAgICwsLCQsLCwgICAgICAEBAQ0N
        DQ0NDQ0ADQ0NDQ0NDQ0NBwcDCAsLCwsLCwsJCAkLCwsLCwsLCQsLCAgICAENDQ0NDQ0NDQ0ADQ0NDQ0N
        DQ0NDQMLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwgICAENDQ0NDQ0NDQ0ADQ0NDQ0NDQ0NDQMICwsLCwsL
        CwsLCwsLCQgICwsLCwsLCAgDAw0NDQ0NDQ0NDQ0ADQ0NDQ0NDQ0NDQ0DAwsLCwsLCwsLCwsLCAgJCwsL
        CwgICAgIAw0NDQ0NDQ0NDQ0ADQ0NDQ0NDQ0NDQ0NDQMICwsLCwsLCwsLCwsLCwsLCwsICAgIAw0NDQ0N
        DQ0NDQ0ADQ0NDQ0NDQ0NDQ0NDQ0DAwsLCwgLCwgJCwsLCwsLCwkICAMDDQ0NDQ0NDQ0NDQ0ADQ0NDQ0N
        DQ0NDQ0NDQ0NDQMDBgsLCwsJCAsLCwsICAgDAw0NDQ0NDQ0NDQ0NDQ0ADQ0NDQ0NDQ0NDQ0NDQ0NDQ0N
        AwsLCAsLCwsLCwsLAwMNDQ0NDQ0NDQ0NDQ0NDQ0ADQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQMDAwgLCwgDAwMD
        DQ0NDQ0NDQ0NDQ0NDQ0NDQ0ADQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQMDAwMNDQ0NDQ0NDQ0NDQ0NDQ0N
        DQ0NDQ0A//wP///+AAD/4Afwf/4AAP/AAeAP/gAA/4AAAAf+AAD/AAAAAf4AAPwAAAAAPgAA+AAAAAAe
        AADwAAAAAA4AAPAAAAAADgAA+AAAAAAeAAD4AAAAAB4AAOAAAAAAHgAAwAAAAAAOAADAAAAAAA4AAIAA
        AAAABgAAgAAAAAACAADAAAAAAAIAAMAAAAAAAgAAgAAAAAAGAAAAAAAAAAIAAAAAAAAAAAAAgAAAAAAA
        AADgAAAAAAAAAMAAAAAAAgAAgAAAAAACAACAAAAAAAIAAMAAAAAABgAA8AAAAAAeAAD4AAAAAH4AAP8A
        AAAA/gAA/4AAAAP+AAD/wAAAA/4AAP/AAAAH/gAA/+AAAAf+AAD/+AAAB/4AAP/8AAAP/gAA//8AAD/+
        AAD//8AA//4AAP//4AP//gAA///8P//+AAA=
</value>
  </data>
</root>